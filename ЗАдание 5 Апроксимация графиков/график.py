# -*- coding: utf-8 -*-
"""График.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t7HA4bGTni9r2BhgsYfPhFUPXXJyZh6Y
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy import interpolate
from scipy.optimize import minimize

def spline(x, y, x_new):
  spline = interpolate.splrep(x, y)
  y_new = interpolate.splev(x_new, spline)
  return y_new

def sigma(e, e_dot, k, n, m):
  sigma = k * e**n * e_dot ** m
  return sigma

# def partial1(k, n, m, e, e_dot, y):
#   part1 = 0
#   for i in range(3):
#     part1 += sum(2 * (k * e**n * e_dot[i]**m - y[i]) * e**n * e_dot[i]**m)
#   return part1

# def partial2(k, n, m, e, e_dot, y):
#   part2 = 0
#   for i in range(3):
#     part2 += sum(2 * (k * e**n * e_dot[i]**m - y[i]) * k * e**n * e_dot[i]**m * np.log(e))
#   return part2

# def partial3(k, n, m, e, e_dot, y):
#   part3 = 0
#   for i in range(3):
#     part3 += sum(2 * (k * e**n * e_dot[i]**m - y[i]) * k * e**n * e_dot[i]**m)
#   return part3

deg = np.pi / 180

epsilon = np.array([0, 0.2, 0.6, 1.2, 1.8, 2.4, 3.0])
sigma_exp = np.array([[0, 2, 4.5, 6, 6.5, 7, 7],
                  [0, 6, 9.5, 10.5, 11, 11, 11],
                  [0, 15, 24, 27, 27.5, 28, 28]])
ksi = np.array([3 * 10**(-5), 3 * 10**(-4), 3 * 10**(-3)])

xx = np.linspace(0.01, 3, 100)
fig, ax = plt.subplots()
y_exp = []
for i in range(3):
  y_exp.append(spline(epsilon, sigma_exp[i], xx))
  ax.plot(epsilon, sigma_exp[i], '*', xx, y_exp[i], '-')
plt.show()

x0 = np.array([500, 0.05, 1])

# for i in range(iter):
#    k = k - lambd1 * partial1(k, n, m, xx, ksi, y_exp)
#    n = n - lambd * partial2(k, n, m, xx, ksi, y_exp)
#    m = m - lambd * partial3(k, n, m, xx, ksi, y_exp)

err = lambda x: sum([sum((x[0] * xx**x[1] * ksi[i]**x[2] - y_exp[i])**2) for i in range(3)])
res = minimize(err, x0)
k, n, m = res.x

fig1, ax1 = plt.subplots()
for i in range(3):
  yy = sigma(xx, ksi[i], k, n, m)
  ax1.plot(epsilon, sigma_exp[i], '*', xx, yy, '-')
plt.show()

print(f"Параметры функции : k = {k}, n = {n}, m = {m}")